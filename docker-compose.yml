services:
  database:
    container_name: 'database'
    image: postgres:17
    environment:
      POSTGRES_USER: dbadmin
      POSTGRES_PASSWORD: dbadmin
      POSTGRES_DB: collaborize
    ports:
      - '5432:5432' # Ensure this line is present
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  tldraw:
    container_name: 'tldraw'
    build:
      context: .
      dockerfile: ./apps/tldraw-sync/Dockerfile
    volumes:
      - ./apps/tldraw-sync:/app
    ports:
      - '5858:5858'
    networks:
      - web

  app:
    container_name: 'app'
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
      target: dev
    command: pnpm dev
    environment:
      DATABASE_URL: postgres://dbadmin:dbadmin@database:5432/collaborize
      AUTH_TRUST_HOST: true
      FRONTEND_URL: https://collaborize.localhost
      API_URL: http://host.docker.internal/api
      AUTH_SECRET: ITU6sRToXsdrDTPW1Uiip/KkDBv1QoyZzUGmbgSSwV4=
      AUTH_REDIRECT_PROXY_URL: https://collaborize.localhost/api/auth
    ports:
      - '3000:3000'
    networks:
      - web
    develop:
      watch:
        - action: sync
          path: ./apps/frontend
          target: ./app/apps/frontend

  reverse-proxy:
    container_name: 'reverse-proxy'
    image: caddy:latest
    environment:
      APP_URL: host.docker.internal:3000
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - '80:80' # HTTPS
      - '443:443' # HTTPS
    networks:
      - web

volumes:
  postgres_data:

networks:
  web:
